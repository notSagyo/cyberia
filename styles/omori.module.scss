@use '/styles/abstracts' as *;
@use '/styles/classes/classes' as c;
@use 'sass:math' as math;
@use 'sass:color' as color;

$cat-width: 350px;
$cat-height: 392px;
$cat-y-offset: -68.9%;

.description, .glitchedDescription {
  position: absolute;
  bottom: 0;
  display: flex;
  align-items: center;

  height: 80px;
  padding: $spacing-sm;

  text-align: justify;
  font-weight: bold;
  color: $blue;
}

.imageShell { margin-top: auto; }

// BIG YELLOW CAT ============================================================//
.catContainer { margin-top: 110px; }

.cat {
  position: absolute;
  pointer-events: none;
  transform: translateY($cat-y-offset);
  z-index: 5;
}

.catEyesContainer {
  position: absolute;
  transform: translateY($cat-y-offset);
  width: $cat-width;
  display: flex;
  justify-content: center;

  .imgWrapper {
    position: relative;
    width: $cat-width * 0.95;
    height: $cat-height;
    overflow: hidden;
  }
}

.catEyes {
  width: 100%;
  height: 100%;
  background-image: url('/img/big-yellow-cat-eyes.png');
  background-size: $cat-width $cat-height;
  background-position-x: center;
  background-repeat: no-repeat;
}

// GLITCHED ==================================================================//
.glitchedDescription {
  animation: glitched 1s infinite;
  color: black;
  filter: blur(1.5px);
}

.bgGlitched::before {
  @extend c, .bgStars !optional;
  filter: hue-rotate(90deg) saturate(5) brightness(0.1);
  animation: move-background 7500s linear infinite;
  background-size: 256px auto;
}

/* stylelint-disable */
@keyframes glitched {
  $skew-range: 10deg;
  $line-height-range: 3;

  $step: 0.5;
  $i: 0;

  @while $i < 100 {
    $i: $i + $step;

    #{$i}% {
      transform:
        skew((math.random() - 0.5) * $skew-range, (math.random() - 0.5) * $skew-range);
      line-height: (math.random() - 0.5) * $line-height-range;

      @if math.random() > 0.5 {
          color: white;
      } @else if math.random() < 0.1 {
        color: red;
      } @else {
        color: black;
      }
    }
  }
}
